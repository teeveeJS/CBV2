const isLegalBishop = require("bishop");
const isLegalKing = require("king").isLegalKing;
const isLegalCastle = require("king").isLegalCastle;
const isLegalKnight = require("knight");
const isLegalPawn = require("pawn").isLegalPawn;
const isLegalRook = require("rook").isLegalRook;
const color = require("utils").color;
const sqEquals = require("coordinates").sqEquals;

function isLegal(p, mv, board) {
  if (color(board.at(mv.end.num, mv.end.alf)) === color(p)) {
    //checks if the output is of the same color
    return false;
  } else if (sqEquals(mv.start, mv.end)) {
    // checks if start and end squares are the same
    return false;
  }

  let x = false;
  switch (p.toUpperCase()) {
    case "R":
      x = isLegalRook(mv, board);
      break;
    case "B":
      x = isLegalBishop(mv, board);
      break;
    case "N":
      x = isLegalKnight(mv, board);
      break;
    case "Q":
      x = isLegalRook(mv, board) || isLegalBishop(mv, board);
      break;
    case "K":
      x = isLegalKing(mv) || isLegalCastle(p, mv, board);
      break;
    case "P":
      x = isLegalPawn(p, mv, board);
      break;
  }

  let nextPos = board.movePieces(p, mv);

  return x && !nextPos.isCheck(board.move_white);
}

// export { isLegal };
module.exports = isLegal;
