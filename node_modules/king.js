const checkRank = require("rook").checkRank;
const color = require("utils").color;

function isLegalKing(move) {
  return Math.abs(move.end.alf - move.start.alf) <= 1 &&
         Math.abs(move.end.num - move.start.num) <= 1;
}

function isLegalCastle(piece, move, board) {
  if (board.isCheck(board.move_white)) return false;

  // determine whether pieces that would make castling illegal have moved
  let rookIndex = {
    2: "whiteQueen",
    6: "whiteKing",
    9: "blackQueen",
    13: "blackKing"
  };
  if (!board.castling[rookIndex[move.end.alf + move.end.num]]) return false;

  let dir = (move.end.alf > move.start.alf) ? 1 : -1;
  let inBetweenSq = {
    alf: move.start.alf + dir,
    num: move.start.num
  };
  if (board.isCheck(board.move_white, inBetweenSq)) return false;

  let rookMove = {
    start: {
      alf: (dir === -1) ? 0 : 7,
      num: color(piece) ? 0 : 7
    },
    end: move.start
  };

  return Math.abs(move.end.alf - move.start.alf) === 2 &&
         move.start.num === move.end.num &&
         checkRank(rookMove, board);
}

// export { isLegalKing, isLegalCastle };
module.exports.isLegalKing = isLegalKing;
module.exports.isLegalCastle = isLegalCastle;
