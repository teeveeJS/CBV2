// https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation

// upper case: white
// lower case: black
// starting position:
// rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1

const Utils = require("utils");

class FEN {
  static toBoardArray(fen) {
    let ranks = fen.split(" ")[0].split("/"); //splits into eight ranks
    let b = Utils.empty8x8();
    let currentRank = 7;
    for (let r = 0; r < 8; r++) {
      let str = ranks[r];
      let currentFile = 0;
      for (let i = 0; i < str.length; i++) {
        let c = str[i];
        if (isNaN(c)) {
          b[currentRank][currentFile++] = c;
        } else {
          currentFile += parseInt(c);
        }
      }
      currentRank--;
    }
    return b;
  }

  static toMove(fen) {
    // white to move: true
    // black to move: false
    return fen.split(" ")[1] === "w";
  }

  static castling(fen) {
    let castles = fen.split(" ")[2];
    return {
      whiteKing: castles.includes("K"),
      whiteQueen: castles.includes("Q"),
      blackKing: castles.includes("k"),
      blackQueen: castles.includes("q")
    };
  }

  static enPassantSquare(fen) {
    let ep = fen.split(" ")[3];
    if (ep === "-") return null;
    else return sqFromStr(ep);
  }

  static halfmove(fen) {
    return parseInt(fen.split(" ")[4]);
  }

  static fullmove(fen) {
    return parseInt(fen.split(" ")[5]);
  }
}

// export { FEN };
// export const INIT_FEN = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
module.exports = FEN;
module.exports.INIT_FEN = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
